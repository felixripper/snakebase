/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  SnakeGameLeaderboard,
  SnakeGameLeaderboardInterface,
} from "../../GameScore.sol/SnakeGameLeaderboard";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "PlayerRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "score",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newHighScore",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "ScoreSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "oldUsername",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "newUsername",
        type: "string",
      },
    ],
    name: "UsernameUpdated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "highScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalGames",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "totalScore",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "firstPlayedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPlayedAt",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "isRegistered",
            type: "bool",
          },
        ],
        internalType: "struct SnakeGameLeaderboard.Player",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "getPlayerRank",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_limit",
        type: "uint256",
      },
    ],
    name: "getTopPlayers",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "playerAddress",
            type: "address",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "score",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "rank",
            type: "uint256",
          },
        ],
        internalType: "struct SnakeGameLeaderboard.LeaderboardEntry[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalPlayers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_player",
        type: "address",
      },
    ],
    name: "isPlayerRegistered",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "isUsernameAvailable",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "playerAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "username",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "highScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalGames",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalScore",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "firstPlayedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPlayedAt",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRegistered",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_username",
        type: "string",
      },
    ],
    name: "registerPlayer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_score",
        type: "uint256",
      },
    ],
    name: "submitScore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_newUsername",
        type: "string",
      },
    ],
    name: "updateUsername",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "usernameToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611580806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c8063b3446f8511610071578063b3446f8514610182578063ba3c006714610195578063c96cea70146101b5578063e2eb41ff146101c8578063f69c6dec146101ef578063f825f1431461020257600080fd5b80631417b82a146100b957806315c6aee2146100fd5780634529cae7146101285780635c12cd4b1461013a578063a697cb0e1461015a578063aff0b2971461016d575b600080fd5b6100e86100c7366004611066565b6001600160a01b031660009081526020819052604090206007015460ff1690565b60405190151581526020015b60405180910390f35b61011061010b366004611096565b610236565b6040516001600160a01b0390911681526020016100f4565b6002545b6040519081526020016100f4565b61014d610148366004611066565b610260565b6040516100f491906110ff565b61012c610168366004611066565b6103bf565b61018061017b366004611096565b6104b4565b005b610180610190366004611192565b6105c3565b6101a86101a3366004611096565b61087f565b6040516100f49190611243565b6101806101c3366004611192565b610c9d565b6101db6101d6366004611066565b610f20565b6040516100f49897969594939291906112db565b6100e86101fd366004611192565b610ff9565b610110610210366004611192565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6002818154811061024657600080fd5b6000918252602090912001546001600160a01b0316905081565b6102b360405180610100016040528060006001600160a01b031681526020016060815260200160008152602001600081526020016000815260200160008152602001600081526020016000151581525090565b6001600160a01b03808316600090815260208181526040918290208251610100810190935280549093168252600183018054929392918401916102f590611335565b80601f016020809104026020016040519081016040528092919081815260200182805461032190611335565b801561036e5780601f106103435761010080835404028352916020019161036e565b820191906000526020600020905b81548152906001019060200180831161035157829003601f168201915b505050918352505060028201546020820152600382015460408201526004820154606082015260058201546080820152600682015460a082015260079091015460ff16151560c09091015292915050565b6001600160a01b03811660009081526020819052604081206007015460ff166103ea57506000919050565b6001600160a01b038216600090815260208190526040812060020154906001905b6002548110156104ac57846001600160a01b0316600282815481106104325761043261136f565b6000918252602090912001546001600160a01b031614801590610491575082600080600284815481106104675761046761136f565b60009182526020808320909101546001600160a01b03168352820192909252604001902060020154115b156104a457816104a08161139b565b9250505b60010161040b565b509392505050565b3360009081526020819052604090206007015460ff166105135760405162461bcd60e51b8152602060048201526015602482015274141b185e595c881b9bdd081c9959da5cdd195c9959605a1b60448201526064015b60405180910390fd5b33600090815260208190526040902060028101548083111561053757600282018390555b600182600301600082825461054c91906113b4565b925050819055508282600401600082825461056791906113b4565b90915550504260068301819055600283015460408051868152602081019290925281019190915233907fc3d569bab9b8a4ed0f3f5808a8a5f9b046ac3e6b9b15607815ef8b40642a13d9906060015b60405180910390a2505050565b3360009081526020819052604090206007015460ff16156106265760405162461bcd60e51b815260206004820152601960248201527f506c6179657220616c7265616479207265676973746572656400000000000000604482015260640161050a565b600381511015801561063a57506014815111155b6106865760405162461bcd60e51b815260206004820181905260248201527f557365726e616d65206d75737420626520332d32302063686172616374657273604482015260640161050a565b60006001600160a01b03166001826040516106a191906113cd565b908152604051908190036020019020546001600160a01b0316146107005760405162461bcd60e51b81526020600482015260166024820152752ab9b2b93730b6b29030b63932b0b23c903a30b5b2b760511b604482015260640161050a565b6040805161010081018252338082526020808301858152600084860181905260608501819052608085018190524260a0860181905260c0860152600160e0860181905293815291829052939020825181546001600160a01b0319166001600160a01b0390911617815592519192919082019061077c908261143a565b506040828101516002830155606083015160038301556080830151600483015560a0830151600583015560c0830151600683015560e0909201516007909101805460ff19169115159190911790555133906001906107db9084906113cd565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319938416179055600280546001810182556000919091527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace018054909216339081179092557fe63e76a936e766d00cc7c8c48c4e7a7b2fe9a32cc8b4668a449ddac9ca429ed49061087490849042906114fa565b60405180910390a250565b60025460609060009083116108945782610898565b6002545b9050806000036108da5760408051600080825260208201909252906104ac565b6108c0611035565b8152602001906001900390816108b8579050509392505050565b60025460009067ffffffffffffffff8111156108f8576108f861117c565b60405190808252806020026020018201604052801561093157816020015b61091e611035565b8152602001906001900390816109165790505b50905060005b600254811015610ad8576000806000600284815481106109595761095961136f565b60009182526020808320909101546001600160a01b0390811684528382019490945260409283019091208251610100810190935280549093168252600183018054929392918401916109aa90611335565b80601f01602080910402602001604051908101604052809291908181526020018280546109d690611335565b8015610a235780601f106109f857610100808354040283529160200191610a23565b820191906000526020600020905b815481529060010190602001808311610a0657829003601f168201915b5050505050815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481526020016007820160009054906101000a900460ff1615151515815250509050604051806080016040528082600001516001600160a01b0316815260200182602001518152602001826040015181526020016000815250838381518110610ac457610ac461136f565b602090810291909101015250600101610937565b5060005b8151811015610bc6576000610af28260016113b4565b90505b8251811015610bbd57828281518110610b1057610b1061136f565b602002602001015160400151838281518110610b2e57610b2e61136f565b6020026020010151604001511115610bb5576000838381518110610b5457610b5461136f565b60200260200101519050838281518110610b7057610b7061136f565b6020026020010151848481518110610b8a57610b8a61136f565b602002602001018190525080848381518110610ba857610ba861136f565b6020026020010181905250505b600101610af5565b50600101610adc565b5060008267ffffffffffffffff811115610be257610be261117c565b604051908082528060200260200182016040528015610c1b57816020015b610c08611035565b815260200190600190039081610c005790505b50905060005b83811015610c9457828181518110610c3b57610c3b61136f565b6020026020010151828281518110610c5557610c5561136f565b6020908102919091010152610c6b8160016113b4565b828281518110610c7d57610c7d61136f565b602090810291909101015160600152600101610c21565b50949350505050565b3360009081526020819052604090206007015460ff16610cf75760405162461bcd60e51b8152602060048201526015602482015274141b185e595c881b9bdd081c9959da5cdd195c9959605a1b604482015260640161050a565b6003815110158015610d0b57506014815111155b610d575760405162461bcd60e51b815260206004820181905260248201527f557365726e616d65206d75737420626520332d32302063686172616374657273604482015260640161050a565b60006001600160a01b0316600182604051610d7291906113cd565b908152604051908190036020019020546001600160a01b031614610dd15760405162461bcd60e51b81526020600482015260166024820152752ab9b2b93730b6b29030b63932b0b23c903a30b5b2b760511b604482015260640161050a565b336000908152602081905260408120600181018054919291610df290611335565b80601f0160208091040260200160405190810160405280929190818152602001828054610e1e90611335565b8015610e6b5780601f10610e4057610100808354040283529160200191610e6b565b820191906000526020600020905b815481529060010190602001808311610e4e57829003601f168201915b50505050509050600181604051610e8291906113cd565b90815260405190819003602001902080546001600160a01b031916905560018201610ead848261143a565b5033600184604051610ebf91906113cd565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b03199093169290921790915533907f13428138c872937c879d86da5f1947a7625d28588e4f7f2c44bcb70abbd77473906105b6908490879061151c565b600060208190529081526040902080546001820180546001600160a01b039092169291610f4c90611335565b80601f0160208091040260200160405190810160405280929190818152602001828054610f7890611335565b8015610fc55780601f10610f9a57610100808354040283529160200191610fc5565b820191906000526020600020905b815481529060010190602001808311610fa857829003601f168201915b5050506002840154600385015460048601546005870154600688015460079098015496979396929550909350919060ff1688565b6000806001600160a01b031660018360405161101591906113cd565b908152604051908190036020019020546001600160a01b03161492915050565b604051806080016040528060006001600160a01b031681526020016060815260200160008152602001600081525090565b60006020828403121561107857600080fd5b81356001600160a01b038116811461108f57600080fd5b9392505050565b6000602082840312156110a857600080fd5b5035919050565b60005b838110156110ca5781810151838201526020016110b2565b50506000910152565b600081518084526110eb8160208601602086016110af565b601f01601f19169290920160200192915050565b602080825282516001600160a01b03168282015282015161010060408301819052600091906111326101208501836110d3565b91506040850151606085015260608501516080850152608085015160a085015260a085015160c085015260c085015160e085015260e0850151151581850152508091505092915050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156111a457600080fd5b813567ffffffffffffffff808211156111bc57600080fd5b818401915084601f8301126111d057600080fd5b8135818111156111e2576111e261117c565b604051601f8201601f19908116603f0116810190838211818310171561120a5761120a61117c565b8160405282815287602084870101111561122357600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208083018184528085518083526040925060408601915060408160051b87010184880160005b838110156112cd57888303603f19018552815180516001600160a01b03168452878101516080898601819052906112a5828701826110d3565b838a0151878b015260609384015193909601929092525050938601939086019060010161126c565b509098975050505050505050565b6001600160a01b0389168152610100602082018190526000906113008382018b6110d3565b604084019990995250506060810195909552608085019390935260a084019190915260c0830152151560e09091015292915050565b600181811c9082168061134957607f821691505b60208210810361136957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016113ad576113ad611385565b5060010190565b808201808211156113c7576113c7611385565b92915050565b600082516113df8184602087016110af565b9190910192915050565b601f821115611435576000816000526020600020601f850160051c810160208610156114125750805b601f850160051c820191505b818110156114315782815560010161141e565b5050505b505050565b815167ffffffffffffffff8111156114545761145461117c565b611468816114628454611335565b846113e9565b602080601f83116001811461149d57600084156114855750858301515b600019600386901b1c1916600185901b178555611431565b600085815260208120601f198616915b828110156114cc578886015182559484019460019091019084016114ad565b50858210156114ea5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061150d60408301856110d3565b90508260208301529392505050565b60408152600061152f60408301856110d3565b828103602084015261154181856110d3565b9594505050505056fea2646970667358221220a64aa25ae12a236eb3659ca4dec73298e5fb26f2f05189ce25b65c2aeabf56d964736f6c63430008180033";

type SnakeGameLeaderboardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SnakeGameLeaderboardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SnakeGameLeaderboard__factory extends ContractFactory {
  constructor(...args: SnakeGameLeaderboardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      SnakeGameLeaderboard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): SnakeGameLeaderboard__factory {
    return super.connect(runner) as SnakeGameLeaderboard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SnakeGameLeaderboardInterface {
    return new Interface(_abi) as SnakeGameLeaderboardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SnakeGameLeaderboard {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as SnakeGameLeaderboard;
  }
}
